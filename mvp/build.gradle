buildscript {
    ext.kotlin_version = '1.0.0'
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'com.github.dcendents:android-maven-gradle-plugin:1.3'
        classpath "org.jetbrains.dokka:dokka-gradle-plugin:0.9.7"
    }
}
plugins {
    id "com.jfrog.bintray" version "1.6"
}
apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'org.jetbrains.dokka'


version = "0.8.2"
group = 'io.chthonic.mythos'
archivesBaseName = 'mythos'
def siteUrl = 'https://github.com/jhavatar/mythos'
def gitUrl = 'https://github.com/jhavatar/mythos.git'

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.2"

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 23
        versionCode 3
        versionName version
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }
}

// required for dokka/javadoc to find sources
sourceSets {
    main.java.srcDirs += 'src/main/kotlin'
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    testCompile 'junit:junit:4.12'
    compile 'com.android.support:appcompat-v7:23.2.1'
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
}

if (project.hasProperty("android")) { // Android libraries
    task sourcesJar(type: Jar) {
        classifier = 'sources'
        from android.sourceSets.main.java.srcDirs
    }
} else { // Java libraries
    task sourcesJar(type: Jar, dependsOn: classes) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }
}

task javadocJar(type: Jar, dependsOn: dokka) {
    classifier = 'javadoc'
    from "$buildDir/javadoc"
}
dokka {
//    moduleName = 'mvp'
    outputFormat = 'javadoc'
    outputDirectory = "$buildDir/javadoc"
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

install {
    repositories.mavenInstaller {
        pom.project {
            name = "mythos"
            description 'A Model-View-Presenter library for Android apps.'
            url siteUrl

            packaging 'aar'
//            groupId archivesBaseName
            artifactId = "mythos"
            version version

            licenses {
                license {
                    name 'The Apache Software License, Version 2.0'
                    url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    distribution 'repo'
                }
            }
            scm {
                connection gitUrl
                url siteUrl

            }
            developers {
                developer {
                    name 'jhavatar'
                }
            }
        }
    }
}

Properties bintrayProps = new Properties()
bintrayProps.load(project.rootProject.file('local.properties').newDataInputStream())
bintray {
    user = bintrayProps.getProperty("bintray.user")
    key = bintrayProps.getProperty("bintray.apikey")
    configurations = ['archives']
    pkg {
        repo = 'maven'
        name = archivesBaseName
        desc = "A Model-View-Presenter library for Android apps."
        websiteUrl = siteUrl
        issueTrackerUrl = 'https://github.com/jhavatar/mythos/issues'
        vcsUrl = gitUrl
        licenses = ['Apache-2.0']
        publicDownloadNumbers = true
        version {
            name = version
            gpg {
                sign = true //Determines whether to GPG sign the files. The default is false
                passphrase =  bintrayProps.getProperty("bintray.gpg.passphrase") //Optional. The passphrase for GPG signing'
            }
        }
    }
}