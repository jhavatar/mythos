buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${rootProject.ext.kotlin_version}"
    }
}
apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'maven-publish'
apply plugin: 'org.jetbrains.dokka'

Properties mythosProps = new Properties()
mythosProps.load(project.rootProject.file('mythos.properties').newDataInputStream())
version = mythosProps.getProperty("versionName")
group = 'com.github.jhavatar.mythos'
def siteUrl = 'https://github.com/jhavatar/mythos'
def gitUrl = 'https://github.com/jhavatar/mythos.git'

android {
    namespace = "io.chthonic.mythos.mvp"
    compileSdkVersion rootProject.ext.compileSdkVersion

    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode = mythosProps.getProperty("versionCode") as Integer
        versionName version
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    buildFeatures {
        viewBinding = true
    }
}

kotlin {
    jvmToolchain(rootProject.ext.javaVersion)
}

repositories {
    google()
    mavenCentral()
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    testImplementation 'junit:junit:4.12'
    api "androidx.appcompat:appcompat:${rootProject.ext.baseXAndroidVersion}"
    api "org.jetbrains.kotlin:kotlin-stdlib:${rootProject.ext.kotlin_version}"
}

if (project.hasProperty("android")) { // Android libraries
    task sourcesJar(type: Jar) {
        archiveClassifier.set('sources')
        from android.sourceSets.main.java.srcDirs
    }
} else { // Java libraries
    task sourcesJar(type: Jar, dependsOn: classes) {
        archiveClassifier.set('sources')
        from sourceSets.main.allSource
    }
}

task javadocJar(type: Jar, dependsOn: dokka) {
    archiveClassifier = 'javadoc'
    from "$buildDir/javadoc"
}

tasks.dokkaJavadoc {
    outputDirectory.set(file(buildDir).toPath().resolve("dokka/javadoc").toFile())
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

publishing {
    publications {
        release(MavenPublication) {
            pom {
                name = "mvp"
                description = 'Model-View-Presenter library for Android apps.'
                url = siteUrl
                packaging = 'aar'
                groupId = group
                artifactId = "mvp"
                version = version

                licenses {
                    license {
                        name = 'The Apache Software License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        distribution = 'repo'
                    }
                }
                scm {
                    connection = gitUrl
                    url = siteUrl

                }
                developers {
                    developer {
                        name = 'jhavatar'
                    }
                }
            }
        }
    }
}
