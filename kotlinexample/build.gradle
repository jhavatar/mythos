apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'


Properties mythosProps = new Properties()
mythosProps.load(project.rootProject.file('mythos.properties').newDataInputStream())

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        applicationId "io.cthonic.mythos.kotlinexample"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode = mythosProps.getProperty("versionCode") as Integer
        versionName = mythosProps.getProperty("versionName")
        flavorDimensions "default"
        multiDexEnabled true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    testImplementation 'junit:junit:4.12'
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
//    implementation "com.github.jhavatar:mythos:${mythosProps.getProperty("versionName")}"
//    implementation project(':mvp')

    implementation "android.arch.lifecycle:viewmodel:${rootProject.ext.lifecycle_version}"
    implementation "android.arch.lifecycle:extensions:${rootProject.ext.lifecycle_version}"

    implementation 'com.android.support:multidex:1.0.3'

    implementation 'com.squareup.leakcanary:leakcanary-android:1.5.4'
    implementation project(path: ':mvp')
}
buildscript {
    ext.kotlin_version = "${rootProject.ext.kotlin_version}"
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${rootProject.ext.kotlin_version}"
    }
}
repositories {
    mavenCentral()
    maven { url "https://jitpack.io" }
}
//configurations.all {
//    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
//}